[
  {
    "objectID": "media/Dolendar_System_Requirements.html",
    "href": "media/Dolendar_System_Requirements.html",
    "title": "Table of Content",
    "section": "",
    "text": "Dolendar System Requirements\nRuilin Wu\n\n\nTable of Content\n\n\n\n\n\n\n\n\nTable of Content\n\n\n\n\n\n\nIntroduction\nOutlines the purpose and overview of the Requirements Specification.\n2\n\n\nExecutive Summary\nA concise recap of the Dolendar’s key aspects and its overarching goals.\n3\n\n\nApplication Context / Environmental Constraints\nDetails of the application and the operating platforms.\n3-4\n\n\nFunctional Requirements\nSpecify the essential actions and features the application must provide.\n4-7\n\n\nNon-functional Requirements\nDetail the performance and quality for system designers and programmers.\n8\n\n\nOther Requirements\n\n9\n\n\nGlossary\nAdditional requirements still need to be mentioned.\n\n\n\nDefines specialized terms throughout the document.\n\n9\n\n\nAssumptions / Risks\nPotential uncertainties and challenges that could impact Dolendar.\n10\n\n\nPriorities / Implementation Phases\nOrder and timeline for the application’s development stages\n10\n\n\nFuture Directions and Expected Changes\nHints at the application’s evolution and potential updates\n11\n\n\n\n\n\n\n\n\nIntroduction\nThis document outlines the software requirements for Dolendar, a productivity suite of software developed by the INF43 Software Engineering group under the commission of Dom Dones, president and founder of DoMore Software Corp.\nDolendar integrates a calendar application and a to-do list manager, aimed at helping users enhance work productivity and personal time management, and understand the impact of procrastination on their scheduling.\n\n\nExecutive Summary\nDolendar is a sophisticated productivity tool that redefines traditional scheduling by integrating to-do lists with calendar functions. It allows users to craft detailed to-do lists while aligning and displaying their tasks alongside scheduled events, providing a holistic view of their commitments. This feature encourages frequent interaction with the calendar, fostering a proactive approach to task management and highlighting the effects of unfinished tasks on overall schedules. By clearly showing how delays can impact one’s time, Dolendar differentiates itself from ordinary organizational software, serving not just as a work aid but as a comprehensive system for managing personal goals and daily activities.\nDolendar offers both a personal-use version and an enterprise version. The personal version is free and equipped with all basic features, and a subscription version can support data storage and synchronization. Businesses can opt for the enterprise version, which offers additional functionalities tailored to professional needs and is accessible through corporate engagement with DoMore Software.\nThe design philosophy behind Dolendar prioritizes simplicity and user-friendliness, recognizing the necessity for an intuitive user experience amidst a competitive market. It is meticulously developed to meet high standards of usability, privacy, and data protection, thereby ensuring reliability for users. Designed for seamless integration with current digital ecosystems, Dolendar complements existing calendar applications and is compatible with cloud services, allowing immediate productivity enhancements without significant changes to existing workflows.\nDolendar goes beyond scheduling; it’s an ally in time management, bridging the gap between digital efficiency and the intricacies of everyday living, enabling users to reclaim control over their time with confidence and ease.\n\n\nApplication Context / Environmental Constraints\nDolendar software is crafted to serve many environments, demonstrating versatility and adaptability.\n\nIt is designed to streamline and enhance the productivity of business and office settings, where individuals and teams alike can efficiently manage their schedules, meetings, and collaborative endeavors. Within these settings, the software will facilitate team-based functionality, allowing for an intuitive interface where the team’s admin can assign tasks and make announcements with ease.\n\nDolendar extends its utility to personal use, where users can organize and track their individual goals, daily tasks, family events, and various other personal activities, making it an indispensable tool in the realm of personal organization.\n\nIt supports an on-the-go lifestyle, enabling users to access and manage their schedules and tasks with the same efficiency outdoors or while traveling.\n\nThe developmental blueprint for Dolendar spans across mobile and desktop platforms. The mobile application is being developed to serve both iOS and Android operating systems for phones and tablets. This version promises a responsive design, capable of adapting to a multitude of screen sizes and orientations for optimal functionality. Following the mobile release, a desktop application is set to be introduced to serve users on Windows, macOS, and Linux, catering to the needs of the desktop environment.\nWith regards to operating system support, the mobile application will be compatible with the system version for iOS and Android at the time of the application release and one prior. The desktop version will match up to the prevailing system versions of Windows, macOS, and Linux at the time of its release, ensuring broad accessibility.\nDesign considerations for Dolendar are centered around a modern, elegant, and sleek user interface (UI) design, emphasizing ease of use and intuitive interactions to reduce friction for the end-user. The UI will be inclusive, accommodating both dark and light modes with customizable color themes to not only cater to user preferences but also to ensure accessibility for users who are color-blind.\nCertain constraints dictate the software’s architecture to ensure it aligns with contemporary expectations. It is imperative that the software syncs with prevalent calendar services such as Google Calendar and Apple iCloud Calendar, negating the need for a proprietary calendar system within Dolendar. Emphasis is placed on adopting modern, secure, and robust programming languages and frameworks to fortify the software’s security, efficiency, and maintainability. A cloud-based backend service is also in the blueprint, designed to manage the intricacies of syncing and collaboration features in line with a subscription-based business model.\nIn the selection of programming languages, the INF43 Software Engineering group has been granted the liberty to choose the most fitting language for the development of this application, ensuring the final product is built on a foundation that maximizes its potential.\n\n\nFunctional Requirements\nDolendar is a combination of a to-do list app and a calendar, and it is designed to enhance work productivity and personal time management. It integrates various functionalities to address human psychology and procrastination, aiding users in achieving personal and professional goals.\nCore Functionalities\n\nEvent and Task Management: Users can create, modify, and delete tasks and events. Tasks are the user’s to-do items, activities or goals planned to be completed; events are planned events, such as meetings or courses, fixed schedules or flexible events. This feature includes setting titles, descriptions, and other relevant details for tasks and events. Tasks are more flexible and can be adjusted around fixed events in the calendar.\n\nTime Allocation for Tasks: Users assign an estimated duration to each task, which the system then integrates into the user’s calendar. This will allow users to have their tasks and events intersected, which helps visualize the time allocated to each task and manage the day more efficiently.\n\nDynamic Task Adjustment: Based on the user’s progress and upcoming deadlines, tasks dynamically change in the calendar. If a task is not completed within the expected time, it is automatically rescheduled, affecting the scheduling of future tasks. This feature highlights the impact of procrastination and helps users better manage their time.\n\nIf a user marks a task as done before the deadline, it will not affect subsequent tasks; however, if a task exceeds the deadline, all subsequent tasks will be delayed accordingly. Once an overdue task is completed, all subsequent tasks return to their normal schedule at the current time.\n\n\nSub-tasks Creation and Management: Allows breaking down large tasks into smaller, more manageable sub-tasks. Each sub-task can have its own description, duration, and completion status. This feature aids in organizing complex tasks and tracking progress on individual components.\n\nCalendar and To-do List Views: Separate views for the calendar and the to-do list, providing different perspectives on the user’s schedule. The calendar view displays both tasks and events chronologically, while the to-do list view focuses on tasks alone. Users can toggle between views based on their preference or need.\n\nTask Tags and Filters: Users can tag tasks and apply filters based on time windows and tags. This feature enhances the organization of tasks by categorizing them (like “work”, “personal”, etc.) and allows users to focus on specific types of tasks within certain time frames using filters.\n\nSyncing: The free version of the software stores data exclusively on the local device and lacks the ability to synchronize across multiple devices. However, the personal paid version or the enterprise edition includes a syncing feature, allowing users to access their personalized settings and information on different devices.\n\nTeam Collaboration: Designed for team use, this feature enhances task distribution and synchronization among team members.\n\nTask Assignment and Notification:\n\nTeam admins can assign tasks to members.\n\nMembers receive notifications and see these tasks integrated into their personal calendars.\n\n\nSynchronization:\n\nThe sync feature ensures that updates made to tasks are immediately reflected on all team members’ devices. This promotes effective collaboration and keeps the team aligned.\n\n\nPrivacy of Tasks and Events:\n\nTasks and calendar items can be set as either public or private. Private tasks or events are visible in the calendar as occupied time slots, but their content remains confidential. Team members can see that there is a private task at a certain time but cannot view its specifics.\n\n\nVisibility and Access:\n\nEvery team member has visibility into everyone else’s task list and calendar. Private tasks or events are visible in the calendar as occupied time slots, but their content remains confidential.\n\nTeam members can see that there is a private task at a certain time but cannot view its specifics.\n\nThis includes viewing the completion status of tasks.\n\nAny team member can add an item to another member’s task list once a day, further enhancing collaborative planning and task distribution.\n\n\n\nUse Case:\nUse Case 1: Managing Personal Tasks (Primary Actor: Individual User)\nBasic Flow:\n\nUser logs into Dolendar.\n\nUser creates a new task, assigning a title, description, and estimated duration.\n\nThe system integrates the task into the user’s calendar based on available time slots.\n\nUser marks the task as completed after finishing it.\n\nSystem updates the calendar, moving upcoming tasks forward.\n\nAlternative Flow:\n\nUser attempts to add a task with an unrealistic duration.\n\nSystem prompts a warning about the duration conflicting with other scheduled events.\n\nUser adjusts the task duration or reschedules other events.\n\nException Flow:\n\nUser forgets to mark a task as completed.\n\nSystem keeps the task in the calendar, causing a shift in subsequent tasks.\n\nUse Case 2: Collaborative Task Management (Primary Actor: Team Member; Secondary Actor: Team Admin)\nBasic Flow:\n\nTeam Admin logs into Dolendar and accesses the team calendar.\n\nTeam Admin assigns a task to a Team Member, specifying details and deadline.\n\nThe system notifies the Team Member and adds the task to their personal calendar.\n\nTeam Member completes the task and marks it as done.\n\nSystem updates the team calendar showing the task’s completion.\n\nUse Case Diagram:\n\n\n\nNon-functional Requirements\n\n\n\n\n\n\n\nUsability\nThe UI/UX should be modern, elegant, and stylish, designed for easy input and editing of tasks and events. Users should be able to easily distinguish between the calendar view and the todo list view. Adding tasks from the todo list to the calendar should not cause confusion but should remain neat and orderly. Users should be able to input and schedule tasks with minimal effort.\n\n\n\n\nSecurity\nUser data should be protected during transmission and at rest using modern encryption protocols, especially for the enterprise version and all long-range versions, ensuring the security of personal and enterprise data without leaks and protecting user privacy.\n\n\nReliability\nTo ensure data integrity, in addition to the sync and cloud data storage features available in the subscribed personal and enterprise versions, the accuracy and retrieval of data saved on local devices should not be compromised.\n\n\nFlexibility\nUsers should have the capability to customize the theme by specifying RGB values, enhancing personalization and improving accessibility for individuals with color vision deficiencies. The platform offers a configurable setting that allows users to select their preferred calendar layout, be it weekly or daily. Additionally, the default duration assigned to new tasks is fully adjustable, ensuring users can tailor their scheduling to fit their unique requirements.\n\n\nMaintainability\nThere needs to be long-term maintenance of data information.Ensure that updates to the application can be rolled out without significant downtime or data migration issues.\n\n\nPerformance\nThe application needs to be responsive with quick response times, especially since it combines a calendar and to-do list, which are sensitive to time. The software needs to manage the relationship between overdue tasks and future tasks, which requires the software to focus on updating tasks.\n\n\n\n\n\nOther Requirements\nClient Engagement:\nKeep the client involved throughout the development process for feedback and iterations on the product design and features.\nBudgets:\nThe total budget offered by DoMore Software Corp. is two million dollars. There is a million dollars for the mobile version of the application and another million upon completion of the desktop application.\nSubscription:\nThe personal use version is completely free for local devices, but does not include any synchronization updates or storage. Subscriptions are voluntary and require the customer’s consent. The business version needs to communicate with DoMore Software Corp. and is a paid service.\nAppearance:\nThe UI is expected to be modern, elegant and sleek appearance to attract the users. Users can choose dark mode or light mode with customizable color themes., but there is currently no option for theme selection. It is available for users to choose different colors for tasks by default.\n\n\nGlossary\n\n\n\n\n\n\n\nTask\nAn entity for the todo list feature and will be assigned to different durations.\n\n\n\n\nSub-task\nSeveral breakdown parts for a major task\n\n\nEvent\nAn entity for the calendar feature. Scheduled activities that occur at a specific time, such as classes or meetings, as opposed to tasks.\n\n\nTag\nKeywords or phrases that can be attached to tasks to categorize them and facilitate filtering.\n\n\nTime Window Filter\nFeatures in Dolendar that allow users to set specific time frames during which certain tagged tasks should be focused on.\n\n\nSyncing\nUsers’ data are stored on a cloud server, enabling access across multiple devices and collaboration with others.\n\n\nUser Interface (UI)\nThe interaction between the user and a digital device or software application, includes all the visual elements.\n\n\n\n\n\nAssumptions / Risks\nThere is no server cost for the free personal use version. The paid version gives users’ syncing capabilities, DoMore Software hosts the cloud syncing service. Assuming the user has a basic understanding of to-do lists and digital calendars and is seeking productivity enhancements and solutions for procrastination through the application.\nThe risks associated with Dolendar include potential financial risks due to market competition and whether the budget is sufficient. There are many calendar or to-do list applications on the market, including Google and Apple, so there is significant competition. Additionally, there is a risk associated with the users, who may not fully engage with the task management system. The most important risk stems from data, requiring robust security measures to prevent leaks. Dolendar involves personal privacy data and may contain confidential or proprietary documents from different companies.\n\n\nPriorities / Implementation Phases\nTimeline:\n\n\n\n\n\n\n\nNovember 3rd, 2023\nSubmission of the preliminary Dolendar System Requirements Specification document, excluding functional requirements and use cases.\n\n\n\n\nNovember 17th, 2023\nCompletion of the Dolendar System Requirements Specification, inclusive of functional requirements and use cases.\n\n\nJanuary 7th, 2024\nLaunch of the initial prototype of Dolendar, with subsequent versions to be released through monthly iterations.\n\n\nNovember, 2024\nThe release of the Dolendar mobile application.\n\n\nApril, 2025\nThe debut of the Dolendar desktop application.\n\n\n\nImplementation:\nMr. Dones emphasized that the prototype should have a new version updated monthly after the initial launch, and he also hopes to be involved in the design of the UI. The priority is to spend one year developing the application for iOS and Android systems on both mobile phones and tablets. Then, use the following six months to transition the mobile version to support desktop environments, including macOS, Windows, and Linux, allowing Dolendar to be used on desktop platforms as well.\n\n\nFuture Directions and Expected Changes\nThe expected changes are to enhance team functionalities for task sharing, collaboration, and management. Beyond the current team features, more discussable and joinable functions will be endowed in the enterprise and individual subscription versions.\nDolendar’s future direction is to update and refine some details of the software continuously. In the future, it may expand to provide users with more data for reference regarding their productivity and efficiency, as well as the extent of their procrastination. The metrics include graphs, rankings, and other metrics, as well as displays of each task’s completion status and more advanced reminders. The Dolendar platform anticipates future expansion and integration, supporting more systems and versions, as well as creating desktop quick-tips like Apple’s widgets. It also aims to support more external calendar synchronization, including Microsoft Outlook, but currently, it is only Apple Calendar and Google Calendar. Moreover, an essential part of the future direction is to consider supporting and aiding more people with disabilities in advancing accessibility."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Phone Number: 5035488226\nEmail: ruiliw5@uci.edu"
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About",
    "section": "",
    "text": "Phone Number: 5035488226\nEmail: ruiliw5@uci.edu"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Capstone Project – Delayed Antibiotics Administration\nI am mainly responsible for all website operations and the preparation of texts and slides, and do EDA and brainstorming with my team.\nVisit project site"
  },
  {
    "objectID": "projects.html#project-1",
    "href": "projects.html#project-1",
    "title": "Projects",
    "section": "",
    "text": "Capstone Project – Delayed Antibiotics Administration\nI am mainly responsible for all website operations and the preparation of texts and slides, and do EDA and brainstorming with my team.\nVisit project site"
  },
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2\nBreast Cancer Recurrence Prediction\nThis project explores factors influencing breast cancer recurrence using Bayesian Logistics modeling and predictive analytics.\nRead detailed report"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3\nAnalyzing Related Factors to Computer Science Conferences Publications\nThis project investigates key factors associated with publication output in computer science conferences.\nBegan by processing and preparing the data, including thorough data cleaning, wrangling, and mining. Then gathered and organized open-source data in JSON format from NSF and NIH, enabling a deeper analysis of how various factors impact the number of conference publications.\nView data processing and cleaning report View finalized data report"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ruilin Wu",
    "section": "",
    "text": "Hi, I’m Ruilin Wu! I’m a third-year student at University of California Irvine, majoring in Data Science with a minor in Informatics."
  },
  {
    "objectID": "media/Breast_Cancer_Recurrence_Prediction.html",
    "href": "media/Breast_Cancer_Recurrence_Prediction.html",
    "title": "Introduction",
    "section": "",
    "text": "Final Project: Breast Cancer Recurrence Prediction\nShuyi Chen, Ruilin Wu\n\nIntroduction\nBreast cancer is one of the most common malignancies affecting women worldwide, and its recurrence remains a serious concern, often occurring months or years after initial breast cancer treatment. Various machine learning models have been explored for predicting breast cancer recurrence, from Naive Bayes classifiers to complex deep learning approaches. While advanced models like CNNs and NLP-based systems show high accuracy, they often depend on unstructured data and complex infrastructure. In contrast, Kim et al. (2016) demonstrated that a Naive Bayesian model can effectively predict five-year recurrence, highlighting its clinical potential.\nThis report focuses on applying Bayesian Logistic Regression—an interpretable and widely used method—to evaluate its effectiveness in predicting breast cancer recurrence using a structured clinical dataset, aiming to support transparent and reliable clinical decision-making.\n\n\nData Description\nThe breast cancer dataset was obtained from the University Medical Centre, Institute of Oncology, located in Ljubljana, Yugoslavia. The dataset consists of 286 instances categorized into two distinct outcomes: 201 instances represent cases with no recurrence events, while 85 instances indicate cases with recurrence events. It is important to note that the dataset contains missing values, necessitating proper handling in subsequent analytical and modeling procedures.\nEach instance within the dataset is described by nine attributes, which include both linear and categorical variables. The attributes include age (categorized in decade ranges from 10 to 99 years), menopause status (categorized as less than 40 years, greater or equal to 40 years, or premenopausal), tumor size (categorized in increments of five millimeters, ranging from 0 to 59 mm), the number of involved axillary lymph nodes (categorized in increments of three, ranging from 0 to 39), presence or absence of capsular invasion (binary classification of yes or no), degree of malignancy (ordinal scale from 1 to 3, indicating increasing severity), the affected breast side (left or right), tumor location within breast quadrants (left-upper, left-lower, right-upper, right-lower, or central), and the administration of irradiation therapy (binary classification of yes or no).\n\n\nExploratory Data Analysis\nAfter removing rows with missing values, our dataset contained 277 observations. We also excluded two single-row categories—one instance of invnodes “24-26” and one instance of age “20-29”—since they each occurred only once and could cause modeling or cross-validation issues. This left us with a final total of 275 observations. The dataset shows a moderate imbalance in the outcome variable, with roughly 71% of cases being no-recurrence events and 29% recurrence events (Figure 1). Most patients fall within the 30–69 age range, and the menopausal status is split mainly between “premenopause” and “greater or equal to 40,” while the “less than 40” group remains sparse. The cross-tabulation (Table 1) indicates that most patients in both outcome groups are between 30 and 69 years old, with the highest counts in the 40–59 age ranges.\n\n\nMethodology\nWe fit a Bayesian logistic regression model (using stan_glm() in the rstanarm package) to predict breast cancer recurrence, employing the binomial family with a logit link. Each predictor—age, menopause, tumorsize, invnodes, nodecaps, degmalig, breast, breastquad, and irradiat—was included as a fixed effect. We applied weakly informative normal priors (μ = 0, σ = 2.5) for coefficients and (μ = 0, σ = 5) for the intercept, without imposing overly strong assumptions on effect sizes.\nFour Markov Chain Monte Carlo (MCMC) chains were run for 10,000 iterations each, and we evaluated convergence via the Gelman–Rubin statistic (R-hat) and effective sample size. The posterior predictive check (Figure 2) suggested that the model adequately captured the distribution of observed outcomes, supporting its overall fit to the data. Furthermore, the MCMC density plot (Figure 3) demonstrated well-behaved sampling behavior across all parameters, with consistent overlap between chains and unimodal posterior distributions. After confirming convergence, we extracted 80% credible intervals for the model’s coefficients (and exponentiated these to interpret them as odds ratios). Model performance was assessed by computing predicted probabilities for each observation, then constructing a ROC curve and identifying an optimal classification threshold using Youden’s index (Figure 4). Finally, a 10-fold cross-validation (classification_summary_cv()) was performed at the chosen threshold (0.33) to estimate sensitivity, specificity, and overall accuracy in an out-of-sample context.\n\n\nResults\nAll chains converged satisfactorily, with R-hat and sufficiently large effective sample sizes. The 80% credible intervals for the exponentiated coefficients reveal that invnodes3–5, invnodes6–8, invnodes9–11, and degmalig lie entirely above 1, indicating a higher probability of recurrence compared to their reference categories. In contrast, tumorsize10–14 sits entirely below 1, suggesting lower recurrence odds than the reference tumor‐size bin. Most other predictors, such as age brackets, menopausal status, most tumor‐size categories, have intervals crossing 1, meaning the model cannot rule out either increased or decreased risk given the data—these effects remain uncertain. Finally, the intercept’s exponentiated interval falling far below 1 indicates that, when all predictors are at their reference levels, the baseline odds of recurrence are quite low; other predictors then raise or lower this low baseline as indicated by their respective odds ratios.\nA ROC curve analysis on the entire dataset suggested a 0.33 probability threshold for optimal classification (Figure 4). Applying this threshold in the 10-fold cross-validation produced a sensitivity of roughly 67.1%, specificity of about 71.3%, and an overall accuracy near 69.5%.\nConclusion\nIn the context of this breast cancer dataset, the Bayesian logistic regression model provided a moderate level of predictive power, aligning with expectations for a relatively small clinical dataset. The model’s interpretability is its key advantage: practitioners can directly review posterior intervals and odds ratios to understand how clinical features—particularly tumor size, lymph node involvement, and degree of malignancy—influence breast cancer recurrence risk. While most variables had limited impact or wider credible intervals due to sparse data, the approach still offered transparent risk stratification. Future work might include incorporating additional patient features such as genetic markers or exploring more robust priors to potentially enhance performance.\n\n\nReferences\nKim, Woojae, et al. “Nomogram of Naive Bayesian Model for Recurrence Prediction of Breast Cancer.” Healthcare Informatics Research, vol. 22, no. 2, 30 Apr. 2016, p. 89, https://doi.org/10.4258/hir.2016.22.2.89.\nWang, Hanyin, et al. “Prediction of Breast Cancer Distant Recurrence Using Natural Language Processing and Knowledge-Guided Convolutional Neural Network.” Artificial Intelligence in Medicine, vol. 110, 1 Nov. 2020, p. 101977, https://doi.org/10.1016/j.artmed.2020.101977.\n\n\nAppendix\n\nFigure 1. Distribution of Recurrence Events\n\n\nFigure 2. PP Check Plot\n\nFigure 3. MCMC Density Plot\n\nFigure 4. ROC Curve"
  },
  {
    "objectID": "projects.html#project-4",
    "href": "projects.html#project-4",
    "title": "Projects",
    "section": "Project 4",
    "text": "Project 4\nDolendar System Requirements\nThis project involved developing a comprehensive report tailored to the client’s specific needs and requirements. After a focused two-hour consultation, I carefully synthesized the client’s input and compiled all key insights into a well-structured document.\nView full report"
  }
]